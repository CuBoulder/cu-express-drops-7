<?php

/**
 * @file
 * Secure permissions for CU-Boulder.
 */


/**
 * Implements hook_install().
 *
 * Creates a set of default users with specified roles.
 */
function cu_permissions_install() {

  // Configure secure_permissions module.
  variable_set('secure_permissions_active', 1);
  variable_set('secure_permissions_disable_forms', 1);
  variable_set('secure_permissions_show_permissions_page', 1);
  variable_set('secure_permissions_show_roles_page', 0);
  variable_set('secure_permissions_use_default', 0);
  variable_set('secure_permissions_verbose', 0);
  variable_set('secure_permissions_ignore_in_export', 'access devel information');

  // Load our roles and permissions.
  secure_permissions_rebuild();

}

/**
 * Implements hook_requirements().
 */
function cu_permissions_requirements($phase) {
  $requirements = array();

  if ($phase == 'runtime') {
    $t = get_t();

    $administrator = user_role_load_by_name('administrator');

    $site_owner = user_role_load_by_name('site_owner');
    $roles = array($administrator->rid => 'administrator', $site_owner->rid => 'site_owner');
    $permissions = user_role_permissions($roles);

    if ($permissions[$administrator->rid] == $permissions[$site_owner->rid]) {
      $requirements['cu_permissions'] = array(
        'title' => $t('CU Users'),
        'value' => $t('Administrator and Site Owner permissions are sychronized.'),
        'severity' => REQUIREMENT_OK,
      );
    } else {
      $admin_result = array_diff_assoc($permissions[$administrator->rid], $permissions[$site_owner->rid]);
      $site_owner_result = array_diff_assoc($permissions[$site_owner->rid], $permissions[$administrator->rid]);

      foreach($admin_result as $key => $result) {
        $perms[] = $key;
      }
     foreach($site_owner_result as $key => $result) {
        $perms[] = $key;
      }
      $checks =  implode(", ", $perms);
      $requirements['cu_permissions'] = array(
        'title' => $t('CU Permissions'),
        'value' => $t('Administrator and Site Owner permissions are NOT synchronized. Check ' . $checks),
        'severity' => REQUIREMENT_ERROR,
      );
    }
  }

  return $requirements;
}


/**
 * defining devl permissions to be ignored on export
 */
function cu_permissions_update_7001() {

  variable_set('secure_permissions_ignore_in_export', 'access devel information');
}
