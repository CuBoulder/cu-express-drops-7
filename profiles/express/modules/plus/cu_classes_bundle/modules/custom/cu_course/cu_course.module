<?php
/**
 * @file
 * Code for the CU Block Layout feature.
 */

/**
 * Implements hook_entity_info().
 */
function cu_course_entity_info() {
  $info = array();

  $info['cu_course'] = array(
    'label' => t('Course'),
    'entity course' => 'Entity',
    'controller course' => 'EntityAPIController',
    'base table' => 'cu_course',
    'fieldable' => TRUE,
    'entity keys' => array(
      'id' => 'course_id',
      'title' => 'title',
      'bundle' => 'type',
    ),
    'module' => 'cu_course',
    // Attach bundles - i.e. alternative configurations of fields associated with a main entity.
    'bundles' => array(
      'course' => array(
        'label' => 'Course',
         // Information below is used by the Field UI - they "attach" themselves here and lets us
         // do the standard field management that all the core entities enjoy.
         'admin' => array(
           'path' => 'admin/structure/course/manage',
            'access arguments' => array('administer course content'),
          ),
        ),
      ),
      'uri callback' => 'entity_course_uri',
      'load hook' => 'cu_course_load',
      'view modes' => array(
        'full' => array(
          'label' => t('Default'),
          'custom settings' => FALSE,
        ),
      ),
  );

  return $info;
}

/**
 * Implements hook_flush_caches().
 */
function cu_course_flush_caches() {
  return array('cache_course');
}

/**
 * Implements hook_ctools_plugin_api().
 */
function cu_course_ctools_plugin_api($module = NULL, $api = NULL) {
  if ($module == "context" && $api == "context") {
    return array("version" => "3");
  }
}

/**
 * Implements hook_views_api().
 */
function cu_course_views_api($module = NULL, $api = NULL) {
  return array("api" => "3.0");
}


/**
 * Implements hook_menu().
 */
function cu_course_menu() {
  // Edit layout
  $items['course/add'] = array(
    'title' => 'Add Course',
    'page callback' => 'cu_course_add',
    'access callback' => FALSE,
    'type' => MENU_LOCAL_TASK,
    'weight' => 0,
  );

  $course_uri = 'course/%cu_course';
  $course_uri_argument_position = 1;

  $items[$course_uri] = array(
    'page callback' => 'cu_course_display',
    'page arguments' => array($course_uri_argument_position),
    'access arguments' => array('access content'),
    'file' => 'cu_course.pages.inc',
    'title callback' => 'cu_course_title',
    'title arguments' => array($course_uri_argument_position),
  );

  $items[$course_uri . '/view'] = array(
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
    'page callback' => 'cu_course_display',
    'page arguments' => array($course_uri_argument_position),
    'access arguments' =>  array('access content'),
    'file' => 'cu_course.pages.inc',
    'title' => 'View',
  );

  $items[$course_uri . '/delete'] = array(
    'title' => 'Delete',
    'title callback' => 'cu_course_label',
    'title arguments' => array($course_uri_argument_position),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cu_course_delete_form', $course_uri_argument_position),
    'access callback' => FALSE,
    'file' => 'cu_course.admin.inc',
  );

  $items[$course_uri . '/edit'] = array(
    'title' => 'Edit',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cu_course_form', $course_uri_argument_position),
    'access callback' => FALSE,
    'file' => 'cu_course.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
  );

  // Layout settings
  $items['admin/config/content/course'] = array(
    'title' => 'Coursees Import Settings',
    'description' => 'Configure Course settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cu_course_settings_form'),
    'access callback' => FALSE,
    'type' => MENU_NORMAL_ITEM,
    'file' => 'cu_course.admin.inc',
  );

   // This provides a place for Field API to hang its own
  // interface and has to be the same as what was defined
  // in course_entity_info() above.
  $items['admin/structure/course/manage'] = array(
    'title' => 'Course',
    'description' => 'Manage Course Entity Structure',
    'page callback' => 'cu_course_admin_page',
    'access callback' => FALSE,
    'weight' => -50,
  );

  $items['courses/subject/%/%'] = array(
    'page callback' => 'cu_course_classes_display',
    'page arguments' => array(2,3),
    'access arguments' => array('access content'),
    'file' => 'cu_course.pages.inc',
    'title callback' => 'cu_course_title_from_catalog_number',
    'title arguments' => array(2,3),
  );

  $items['courses/subject/%'] = array(
    'page callback' => 'cu_course_by_subject_display',
    'page arguments' => array(2),
    'access arguments' => array('access content'),
    'file' => 'cu_course.pages.inc',
    'title callback' => 'cu_course_list_title_from_subject',
    'title arguments' => array(2),
  );

  return $items;
}

/**
 * Implements hook_entity_view().
 */
function cu_course_entity_view($entity, $type, $view_mode) {
  if ($type == 'cu_course') {
    // alter it here
  }
}


/**
 * Creates an course entity for us - simply intializing the main variables and
 * sending us to a form to add in the rest.
 */
function cu_course_add() {

  $course = entity_create('cu_course', array('type' => 'course'));

  return drupal_get_form('cu_course_form', $course);
}

/**
 * Course Form.
 */
function cu_course_form($form, &$form_state, $course) {

  $form_state['course'] = $course;

  field_attach_form('cu_course', $course, $form, $form_state);

  $submit = array();
  if (!empty($form['#submit'])) {
    $submit += $form['#submit'];
  }

  $form['actions'] = array(
    '#weight' => 100,
  );

  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save course'),
    '#submit' => $submit + array('cu_course_form_submit'),
  );

  return $form;
}

/**
 * Course submit handler.
 */
function cu_course_form_submit($form, &$form_state) {
  $course = $form_state['course'];

  entity_form_submit_build_entity('cu_course', $course, $form, $form_state);

  entity_save('cu_course', $course);

  $course_uri = entity_uri('cu_course', $course);

  $form_state['redirect'] = $course_uri['path'];

  drupal_set_message(t('Course %title saved.', array('%title' => entity_label('cu_course', $course))));
}

/**
 * Just provide some airing info for the entity administration page.
 * This can be expanded to add more information / a list of all created entites, etc.
 */
function cu_course_admin_page() {
  //$output = 'Welcome to the administration page for your Airing Entities.<br/>';
  //$output .= '<ul course="action-links"><li><a href="/airing/add">Add Airing</a></li></ul>';
  //return $output;

  // Not sure why we'd need an admin landing page, so I'm redirecting to field

  drupal_goto('admin/structure/course/manage/fields');
}

/**
 * Load a course.
 */
function cu_course_load($course_id, $reset = FALSE) {
  $coursees = cu_course_load_multiple(array($course_id), array(), $reset);
  return reset($coursees);
}

/**
 * Load multiple coursees based on certain conditions.
 */
function cu_course_load_multiple($course_ids = array(), $conditions = array(), $reset = FALSE) {
  return entity_load('cu_course', $course_ids, $conditions, $reset);
}

function cu_course_page_alter(&$page) {
  drupal_add_js(drupal_get_path('module', 'cu_course') . '/js/cu-course.js');
}
