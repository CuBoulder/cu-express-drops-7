<?php

function cu_class_schema() {
  $schema = array();
  // Optional cache table for entitycache support.
  //$schema['cache_class'] = drupal_get_schema_unprocessed('system', 'cache');
  //$schema['cache_class']['description'] = 'Cache table used to store layout entity records.';

  $schema['cu_class'] = array(
    'description' => 'The base table for Class.',
    'fields' => array(
      'class_id' => array(
        'description' => 'Primary key for Class.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'title' => array(
        'description' => 'Name of the Class',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
      'course_id' => array(
        'description' => 'Course ID',
        'type' => 'int',
        'not null' => FALSE,
      ),
      'term_id' => array(
        'description' => 'Term ID',
        'type' => 'int',
        'not null' => FALSE,
      ),
      'subject' => array(
        'description' => 'Subject',
        'type' => 'varchar',
        'length' => 10,
        'not null' => FALSE,
      ),
      'inst' => array(
        'description' => 'Code of Institution',
        'type' => 'varchar',
        'length' => 10,
        'not null' => FALSE,
      ),
      'type' => array(
        'description' => 'The type (bundle) of this class',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
      'status' => array(
        'description' => 'Status',
        'type' => 'int',
        'not null' => FALSE,
        'default' => '1',
      ),
    ),
    'primary key' => array('class_id', 'subject', 'inst', 'term_id'),
  );

  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function cu_class_uninstall() {
  // Delete field instances related to Class entity
  field_attach_delete_bundle('cu_class', 'cu_class');
}

/**
 * Add status to class entity
 */
function cu_class_update_7001() {
  db_add_field('cu_class', 'status',
    array(
      'description' => 'Status',
      'type' => 'int',
      'not null' => FALSE,
      'default' => '1',
    )
  );
}

/**
 * Add UUID field to classes.
 */
function cu_class_update_7002() {

  db_add_field('cu_class', 'term_id',
    array(
      'description' => 'Term ID',
      'type' => 'int',
      'length' => 10,
      'not null' => FALSE,
    )
  );
  db_add_field('cu_class', 'subject',
    array(
      'description' => 'Subject',
      'type' => 'varchar',
      'length' => 10,
      'not null' => FALSE,
    )
  );
  db_add_field('cu_class', 'inst',
    array(
      'description' => 'Code of Institution',
      'type' => 'varchar',
      'length' => 10,
      'not null' => FALSE,
    )
  );

  // Revert field bases to add UUID field.
  $f = features_get_features('cu_class_fields');
  $components = array_keys($f->info['features']);
  features_revert(array($f->name => $components));

  // Save each class with new UUID field.
  $classes = entity_load('cu_class');
  foreach ($classes as $key => $class) {
    $class->field_class_uuid[LANGUAGE_NONE][0]['value'] = $class->field_class_institution[LANGUAGE_NONE][0]['value'] . '-' . $class->field_class_subject[LANGUAGE_NONE][0]['value'] . '-' . $class->field_class_strm[LANGUAGE_NONE][0]['value'] . '-' . $class->field_class_crse_id[LANGUAGE_NONE][0]['value'];
    $class->subject = $class->field_class_subject[LANGUAGE_NONE][0]['value'];
    $class->term_id = $class->field_class_strm[LANGUAGE_NONE][0]['value'];
    $class->inst = $class->field_class_institution[LANGUAGE_NONE][0]['value'];
    entity_save('cu_class', $class);
  }

  // Change definition of course_id to allow id field to become primary key.
  db_change_field('cu_class', 'class_id', 'class_id', array(
    'description' => 'Course ID',
    'type' => 'int',
    'unsigned' => FALSE,
    'not null' => TRUE,
    'length' => 32,
  ));

  // Change primary keys.
  db_drop_primary_key('cu_class');
  db_drop_index('cu_class', 'class_id');
  db_add_primary_key('cu_class', array('class_id', 'subject', 'inst', 'term_id'));
}

/**
 * Add subject readable value to classes.
 */
function cu_class_update_7003() {

  // Revert field bases to add subject display field.
  $f = features_get_features('cu_class_fields');
  $components = array_keys($f->info['features']);
  features_revert(array($f->name => $components));


}
